{"ast":null,"code":"const apiKey = \"187660880dcb3b894d9fbe3ab7efa20d\";\nlet city = () => {\n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(position => {\n      const latitude = position.coords.latitude;\n      const longitude = position.coords.longitude;\n      return latitude, longitude;\n    }, error => {\n      console.log(error);\n    });\n  } else {\n    console.log(\"Geolocation nu este suportat în acest browser.\");\n  }\n};\nconst days = 4;\nconst url = `https://api.openweathermap.org/data/2.5/forecast?q=${city}&cnt=${days}&appid=${apiKey}`;\nasync function getWeatherData() {\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    const weatherData = data.list;\n    console.log(weatherData);\n  } catch (error) {\n    console.log(error);\n  }\n}\nconst weatherData = await getWeatherData();\nconsole.log(weatherData); // va afișa datele meteo pentru cele 4 zile în consolă","map":{"version":3,"names":["apiKey","city","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","error","console","log","days","url","getWeatherData","response","fetch","data","json","weatherData","list"],"sources":["C:/Users/EidriiaN/Desktop/Facultate/Proiecte personale/ReactJSfreecodecamp/React_Wheater/src/scripts/callAPI2.js"],"sourcesContent":["const apiKey = \"187660880dcb3b894d9fbe3ab7efa20d\";\r\nlet city =()=>{\r\n\tif (navigator.geolocation) {\r\n\tnavigator.geolocation.getCurrentPosition(\r\n    position => {\r\n      const latitude = position.coords.latitude;\r\n      const longitude = position.coords.longitude;\r\n      return latitude, longitude\r\n    },\r\n    error => {\r\n      console.log(error);\r\n    }\r\n  );\r\n} else {\r\n  console.log(\"Geolocation nu este suportat în acest browser.\");\r\n}\r\n\t\r\n};\r\n\r\nconst days = 4;\r\nconst url = `https://api.openweathermap.org/data/2.5/forecast?q=${city}&cnt=${days}&appid=${apiKey}`;\r\n\r\nasync function getWeatherData() {\r\n  try {\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    const weatherData = data.list;\r\n    console.log(weatherData);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nconst weatherData = await getWeatherData();\r\nconsole.log(weatherData); // va afișa datele meteo pentru cele 4 zile în consolă\r\n"],"mappings":"AAAA,MAAMA,MAAM,GAAG,kCAAkC;AACjD,IAAIC,IAAI,GAAE,MAAI;EACb,IAAIC,SAAS,CAACC,WAAW,EAAE;IAC3BD,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACrCC,QAAQ,IAAI;MACV,MAAMC,QAAQ,GAAGD,QAAQ,CAACE,MAAM,CAACD,QAAQ;MACzC,MAAME,SAAS,GAAGH,QAAQ,CAACE,MAAM,CAACC,SAAS;MAC3C,OAAOF,QAAQ,EAAEE,SAAS;IAC5B,CAAC,EACDC,KAAK,IAAI;MACPC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB,CAAC,CACF;EACH,CAAC,MAAM;IACLC,OAAO,CAACC,GAAG,CAAC,gDAAgD,CAAC;EAC/D;AAEA,CAAC;AAED,MAAMC,IAAI,GAAG,CAAC;AACd,MAAMC,GAAG,GAAI,sDAAqDZ,IAAK,QAAOW,IAAK,UAASZ,MAAO,EAAC;AAEpG,eAAec,cAAc,GAAG;EAC9B,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAG,CAAC;IACjC,MAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IAClC,MAAMC,WAAW,GAAGF,IAAI,CAACG,IAAI;IAC7BV,OAAO,CAACC,GAAG,CAACQ,WAAW,CAAC;EAC1B,CAAC,CAAC,OAAOV,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF;AAEA,MAAMU,WAAW,GAAG,MAAML,cAAc,EAAE;AAC1CJ,OAAO,CAACC,GAAG,CAACQ,WAAW,CAAC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}